{
  "meta": {
    "version": "v15.0.0-unified",
    "updated": "2025-07-15T20:33:13Z",
    "by": "anon987654321",
    "description": "Unified, self-optimizing, production-ready prompt orchestration framework with world-class standards, strict validation, and meta-documentation.",
    "cognitive_compliance": "self_applied_master_standards",
    "enhancement_note": "Restored documentation standards, validation pipeline, testing framework, and enhanced self-optimization logic from historical versions"
  },

  "documentation": {
    "cognitive_header": "§ Documentation Standards Framework",
    "style": "Strunk & White, ELI5. All comments must explain non-obvious logic. Maintain clear section headers and inline documentation.",
    "required_sections": ["summary", "usage", "examples", "troubleshooting", "changelog", "validation"],
    "code_examples": {
      "include": true,
      "test_verified": true,
      "show_expected_output": true,
      "format": "four_backticks_for_markdown"
    },
    "inline_comments": {
      "enabled": true,
      "style": "concise_targeted_explanatory",
      "required_for": ["complex_logic", "business_rules", "security_measures", "performance_optimizations"]
    }
  },

  "workflow": {
    "cognitive_header": "§ Workflow Intelligence System",
    "mode_detection": {
      "simple": ["basic_implementation", "single_stack", "minimal_features"],
      "complex": ["business_plan", "design_system", "multi_technology", "visualization", "ai_integration", "async_processing", "browser_automation"]
    },
    "phases": {
      "simple": ["analyze", "build", "verify", "package"],
      "complex": ["empathize_and_analyze", "define_and_design", "ideate_and_architect", "prototype_and_implement", "test_and_validate", "optimize_and_refine", "deliver_and_evolve"]
    },
    "execution": {
      "auto_iterate": true,
      "max_iterations": 10,
      "validation_required": true,
      "ai_enhancement": "enabled",
      "rollback_on_error": true
    }
  },

  "validation": {
    "cognitive_header": "§ Strict Validation & Consistency Framework",
    "strict_output_management": {
      "enabled": true,
      "rules": [
        "No truncation, omission, or deletion in any output.",
        "Restore previous valid state and retry if validation fails.",
        "Line count and SHA-256 checksum must be appended to all artifact files.",
        "EOF marker required: // EOF ({line_count} lines)",
        "Schema validation for all JSON and YAML configs."
      ]
    },
    "iteration_validation": {
      "enabled": true,
      "max_iterations": 10,
      "allow_early_exit": true,
      "rollback_on_error": true,
      "merge_improvements": true,
      "final_only": true,
      "quiet_mode": true,
      "log_critical_issues": true
    },
    "pipeline": ["syntax", "schema", "context", "rule_compliance", "ambiguity_detection"],
    "enforce_all_rules": true,
    "compare_with_original": true,
    "runtime_type_checking": {
      "enabled": true,
      "expected_types": {
        "project_name": "string",
        "version": "semver_string",
        "creation_date": "iso8601_datetime"
      }
    },
    "consistency_checks": {
      "threshold_validation": "all_thresholds_must_include_units_and_ranges",
      "cross_reference_validation": "verify_all_references_exist",
      "formatting_consistency": "universal_standards_applied"
    }
  },

  "testing": {
    "cognitive_header": "§ Testing & Validation Framework",
    "quality_gates": {
      "syntax": "no_errors",
      "tests": "90_percent_coverage",
      "security": "zero_trust_a_plus",
      "performance": "95_plus_core_web_vitals",
      "accessibility": "wcag_2_2_aaa",
      "formatting": "universal_consistency"
    },
    "tools": {
      "linting": ["rubocop", "eslint"],
      "testing": ["rspec", "jest", "playwright"],
      "security": ["brakeman", "bundler_audit"],
      "performance": ["lighthouse", "web_vitals"],
      "accessibility": ["axe_core"]
    },
    "validation_procedures": {
      "automated_testing": {
        "unit_tests": "required",
        "integration_tests": "required",
        "performance_tests": "required",
        "load_tests": "required",
        "edge_case_testing": "comprehensive"
      },
      "monitoring_systems": {
        "real_time_metrics": "enabled",
        "historical_tracking": "enabled",
        "alert_systems": "enabled",
        "reporting_dashboards": "enabled"
      }
    },
    "test_results_output": {
      "enabled": true,
      "format": "detailed_report_with_metrics",
      "include_coverage": true,
      "include_performance": true
    },
    "ai_enhancement": {
      "code_review": "semantic_analysis",
      "security": "vulnerability_detection",
      "performance": "predictive_analysis",
      "accessibility": "automated_validation"
    }
  },

  "core": {
    "cognitive_header": "§ Core Cognitive Framework",
    "cognitive_framework": {
      "version": "2.0.0",
      "compliance_level": "master",
      "formatting_standards": {
        "indentation": "2_spaces",
        "quotes": "double_quotes",
        "line_length": 120,
        "cognitive_headers": true
      },
      "cognitive_constraints": {
        "max_concepts_per_section": 7,
        "max_nesting_depth": 3,
        "context_switching_threshold": 3,
        "flow_state_protection": true
      },
      "implementation_patterns": {
        "circuit_breaker_required": true,
        "cognitive_load_monitoring": true,
        "attention_restoration": true,
        "working_memory_management": true
      },
      "extreme_scrutiny_framework": {
        "enabled": true,
        "precision_questions": {
          "specification_clarity": "What specific units, thresholds, and validation procedures are defined?",
          "edge_case_coverage": "What boundary conditions and error scenarios are addressed?",
          "resource_bounds": "What are the explicit memory, time, and processing limits?",
          "failure_modes": "What happens when each component fails or reaches capacity?",
          "measurement_precision": "How are success criteria quantified and verified?",
          "conflict_resolution": "What procedures handle conflicting requirements?"
        },
        "mandatory_validations": {
          "threshold_definitions": "All thresholds must include specific units and ranges",
          "resource_limits": "All processes must have explicit bounds and timeouts",
          "failure_handling": "All operations must define failure modes and recovery",
          "measurement_standards": "All success criteria must be quantifiable and testable"
        }
      },
      "cognitive_load_budgeting": {
        "enabled": true,
        "total_allocation": "100%",
        "allocation_strategy": {
          "analysis": "25%",
          "implementation": "40%",
          "validation": "20%",
          "optimization": "15%"
        },
        "overflow_handling": {
          "detection_threshold": "95%",
          "response_procedures": [
            "pause_non_critical_processes",
            "activate_circuit_breakers",
            "prioritize_core_functionality",
            "request_resource_increase"
          ]
        },
        "monitoring": {
          "real_time_tracking": "enabled",
          "allocation_alerts": "enabled",
          "rebalancing_triggers": "enabled",
          "performance_metrics": "enabled"
        }
      }
    },
    "circuit_breakers": {
      "cognitive_header": "§ Circuit Breaker Safety Systems",
      "enabled": true,
      "cognitive_overload_protection": {
        "detection_metrics": {
          "concept_density": "max_7_per_section",
          "nesting_depth": "max_3_levels",
          "context_switches": "max_3_per_minute",
          "working_memory_load": "max_7_concurrent_items"
        },
        "response_actions": {
          "pause_processing": "immediate",
          "reduce_complexity": "automatic",
          "request_clarification": "enabled",
          "fallback_to_simple_mode": "enabled"
        }
      },
      "infinite_loop_prevention": {
        "detection_methods": {
          "iteration_count": "max_1000_cycles",
          "time_threshold": "max_30_seconds",
          "resource_consumption": "max_80_percent",
          "pattern_repetition": "max_5_identical_cycles"
        },
        "termination_procedures": {
          "graceful_exit": "save_state_and_terminate",
          "resource_cleanup": "release_all_locks",
          "error_reporting": "log_detailed_diagnostics",
          "recovery_mode": "restart_with_reduced_scope"
        }
      },
      "resource_exhaustion_protection": {
        "monitoring_thresholds": {
          "memory_usage": "max_80_percent",
          "cpu_utilization": "max_75_percent",
          "storage_capacity": "max_90_percent",
          "network_bandwidth": "max_70_percent"
        },
        "mitigation_strategies": {
          "resource_prioritization": "core_functions_first",
          "background_task_suspension": "enabled",
          "cache_cleanup": "automatic",
          "connection_pooling": "enabled"
        }
      }
    },
    "measurement_precision": {
      "cognitive_header": "§ Measurement Precision Standards",
      "enabled": true,
      "threshold_definitions": {
        "response_time": {
          "unit": "milliseconds",
          "acceptable": "< 200ms",
          "warning": "200-500ms",
          "critical": "> 500ms",
          "validation": "automated_testing"
        },
        "resource_utilization": {
          "unit": "percentage",
          "normal": "< 70%",
          "warning": "70-85%",
          "critical": "> 85%",
          "validation": "continuous_monitoring"
        },
        "error_rates": {
          "unit": "percentage",
          "acceptable": "< 1%",
          "warning": "1-5%",
          "critical": "> 5%",
          "validation": "error_tracking_systems"
        },
        "cognitive_load": {
          "unit": "percentage",
          "optimal": "< 80%",
          "warning": "80-95%",
          "overload": "> 95%",
          "validation": "cognitive_load_budgeting"
        }
      }
    },
    "communication": {
      "style": "strunk_white_accessibility_conscious",
      "format": "essential_only_no_truncation",
      "temperature": {
        "analysis": 0.2,
        "creativity": 0.9,
        "implementation": 0.1,
        "business": 0.4
      }
    },
    "limits": {
      "memory": "unlimited_with_gc",
      "timeout": "unlimited_with_user_control",
      "recursion": "unlimited_with_circuit_breaker"
    },
    "principles": {
      "security": "zero_trust_defense_in_depth",
      "quality": "world_class_standards",
      "accessibility": "wcag_2_2_aaa_compliant",
      "performance": "95_plus_core_web_vitals",
      "formatting": "universal_consistency",
      "preservation": "never_truncate_preserve_logic"
    },
    "multi_perspective": {
      "roles": [
        {"role": "security_expert", "temperature": 0.2, "weight": 0.25},
        {"role": "architect", "temperature": 0.4, "weight": 0.20},
        {"role": "creative_innovator", "temperature": 0.9, "weight": 0.15},
        {"role": "performance_engineer", "temperature": 0.3, "weight": 0.15},
        {"role": "openbsd_specialist", "temperature": 0.3, "weight": 0.15},
        {"role": "rails_expert", "temperature": 0.4, "weight": 0.10}
      ],
      "consensus_threshold": 0.7
    }
  },

  "self_optimization": {
    "cognitive_header": "§ Enhanced Self-Optimization Logic",
    "philosophy": "surgical_enhancement_preserve_core_apex_architecture_cognitive_sustainability_recursive_wisdom",
    "triggers": [
      "performance_degradation",
      "error_increase",
      "user_feedback",
      "cognitive_efficiency_degradation_threshold_85_percent",
      "working_memory_overflow_detected",
      "attention_drift_sustained_over_30_seconds",
      "flow_state_disruption_frequency_increase",
      "complexity_cascade_detected",
      "user_cognitive_comfort_zone_exceeded"
    ],
    "forbidden_removals": [
      "security",
      "accessibility",
      "never_truncate",
      "world_class_standards",
      "security_framework_zero_trust",
      "accessibility_compliance_wcag_2_2_aaa",
      "never_truncate_policy_complete_context",
      "2_space_indentation_religious_enforcement",
      "double_quotes_everywhere_cognitive_consistency",
      "graceful_degradation_user_experience",
      "cognitive_safeguards_working_memory_protection",
      "flow_state_preservation_deep_work_protection",
      "recursive_optimization_meta_learning",
      "documentation_standards",
      "validation_pipeline",
      "testing_framework"
    ],
    "bounded_recursive_enhancement": {
      "enabled": true,
      "limits": {
        "max_iteration_depth": 10,
        "max_enhancement_cycles": 15,
        "max_processing_time": "300_seconds",
        "max_resource_utilization": "80_percent"
      },
      "termination_conditions": {
        "improvement_threshold": "5_percent_minimum",
        "stability_requirement": "3_consecutive_stable_cycles",
        "resource_exhaustion": "automatic_termination",
        "time_limit_exceeded": "graceful_exit"
      },
      "safety_mechanisms": {
        "state_checkpoints": "enabled",
        "rollback_capability": "enabled",
        "circuit_breaker_integration": "enabled",
        "progress_monitoring": "enabled"
      }
    },
    "meta_analysis": {
      "enabled": true,
      "frequency": "end_of_each_execution",
      "metrics": ["completion_quality", "process_efficiency", "user_satisfaction", "cognitive_load"],
      "improvement_suggestions": "automated_generation",
      "learning_integration": "continuous_enhancement"
    },
    "success_metrics": {
      "completion_rate": "95_percent",
      "satisfaction": "nps_70_plus_cognitive_comfort_included_measured",
      "quality": "world_class_compliance_cognitive_accessible_quantified",
      "performance": "95_plus_lighthouse_cognitive_efficiency_optimized",
      "reliability": "99_9_percent_uptime_cognitive_continuity_preserved",
      "recursive_improvement": "continuous_self_optimization_cognitive_limits_respected",
      "cognitive_sustainability": "long_term_mental_resource_conservation_validated"
    }
  },

  "stacks": {
    "detection": {
      "rails": ["Gemfile", "config/application.rb", "app/"],
      "ruby": ["*.rb", "Gemfile", "Rakefile"],
      "frontend": ["*.html", "*.css", "*.js", "package.json"],
      "shell": ["*.sh", "*.zsh", "*.bash"],
      "business": ["business_plan", "canvas", "financial_model"],
      "animation": ["babylon.js", "three.js", "d3.js", "svg_animations"],
      "async": ["async", "concurrent", "parallel", "queue"],
      "browser": ["ferrum", "selenium", "playwright", "puppeteer"],
      "scraping": ["nokogiri", "mechanize", "httparty"]
    },
    "templates": {
      "rails": {
        "version": "8.0+",
        "features": ["hotwire", "stimulus", "solid_queue"],
        "security": ["strong_params", "csrf_protection", "pundit"],
        "performance": ["falcon_server", "fragment_caching"]
      },
      "ruby": {
        "version": "3.3+",
        "patterns": ["frozen_string_literal", "yard_docs", "solid_principles"],
        "tools": ["rubocop", "rspec", "bundler"],
        "async": ["async", "concurrent-ruby", "sidekiq"]
      },
      "frontend": {
        "standards": ["html5", "wcag_2.2_aaa", "mobile_first"],
        "performance": ["core_web_vitals_95_plus", "gpu_acceleration"],
        "design": ["golden_ratio", "8px_grid", "modular_scale"]
      },
      "shell": {
        "compatibility": ["posix", "zsh", "openbsd_ksh"],
        "safety": ["set_euo_pipefail", "input_validation"],
        "openbsd": ["pledge_unveil", "doas"]
      }
    }
  },

  "formatting": {
    "universal": {
      "indentation": {"type": "spaces", "size": 2},
      "quotes": "double_quotes_consistent",
      "line_endings": "unix_lf",
      "alignment": "optical_over_mathematical",
      "newlines": "semantic_grouping",
      "cognitive_headers": "enabled"
    },
    "accessibility": {
      "alt_text": "descriptive_contextual",
      "aria_labels": "comprehensive_semantic",
      "heading_hierarchy": "logical_sequential",
      "focus_indicators": "high_contrast_visible",
      "wcag_compliance": "2.2_aaa_required"
    },
    "language_specific": {
      "ruby": {
        "frozen_string_literal": "required",
        "hash_syntax": "symbol_to_proc",
        "method_chaining": "semantic_alignment",
        "async_patterns": "clear_formatting",
        "yard_docs": "required_for_public_methods"
      },
      "javascript": {
        "semicolons": "always",
        "const_let_var": "const_first",
        "async_await": "prefer_over_promises",
        "double_quotes": "enforced"
      },
      "css": {
        "property_ordering": "logical_groups",
        "custom_properties": "semantic_naming",
        "media_queries": "mobile_first",
        "class_naming": "underscore_convention",
        "no_divitis": "semantic_html5_only"
      },
      "shell": {
        "posix_compliance": "required",
        "error_handling": "set_euo_pipefail",
        "input_validation": "mandatory"
      },
      "norwegian_business": {
        "language_support": "nb_NO_required",
        "currency_format": "NOK_standard",
        "legal_compliance": "norwegian_law"
      }
    }
  },

  "design_system": {
    "cognitive_header": "§ Design System Architecture",
    "visual_layout_prompts": {
      "html": {
        "cognitive_header": "§ Semantic HTML5 Structure Guidelines",
        "structure": {
          "semantic_elements": "Use header, main, section, footer with ARIA roles",
          "heading_hierarchy": "h1 for title, h2 for sections, h3 for subsections",
          "accessibility": "Follow wcag_2_2_aaa standards",
          "separation": "Avoid inline styles, separate content and presentation",
          "localization": "Set lang attribute (e.g., 'nb' for Norwegian)"
        },
        "interactive_elements": {
          "aria_labels": "Include for all interactive elements",
          "section_context": "Use hidden headings for context",
          "lists_and_grids": "Use role='list' and role='listitem'",
          "external_links": "Add rel='noopener' for external URLs"
        },
        "print_optimization": {
          "page_size": "A5 with 0.75cm margins",
          "page_breaks": "Use page-break-inside: avoid",
          "color_adjustment": "Use print-color-adjust: exact",
          "testing": "Verify Chrome PDF output"
        }
      },
      "css": {
        "cognitive_header": "§ CSS Design System Principles",
        "dry_principles": {
          "custom_properties": "Use --text, --gap-large, --font-primary",
          "property_definition": "Define in :root, reuse across elements",
          "repetition_minimization": "Eliminate style duplication"
        },
        "typography_system": {
          "fluid_scaling": {
            "method": "calc() and vw between 600px-800px viewports",
            "example": "calc(15px + (18 - 15) * ((100vw - 600px) / (800 - 600)))",
            "reference": "MadeByMike precise control method"
          },
          "golden_ratio_sizes": {
            "h1": "32px–42px",
            "h2": "20px–28px", 
            "h3": "16px–20px",
            "body": "15px–18px"
          },
          "font_selection": {
            "style": "Serif for headings and body (letters)",
            "examples": "Georgia for headings, Merriweather for body",
            "reference": "Bringhurst 5.1 principles"
          },
          "spacing_rules": {
            "line_height": "1.5–1.65",
            "letter_spacing": "0.02em–0.05em",
            "text_indent": "2em for body text"
          }
        },
        "layout_system": {
          "flexbox_usage": "Centered, single-column layouts",
          "grid_usage": "Responsive lists with auto-fit, minmax(150px, 1fr)",
          "spacing_scale": {
            "base_grid": "8pt grid system",
            "proportions": "Golden ratio (0.5rem, 1rem, 1.618rem, 2rem)",
            "heading_margins": "h2: margin 2rem 0 1rem",
            "list_margins": "ul: margin-bottom 1.618rem"
          }
        },
        "accessibility_system": {
          "focus_indicators": "outline: 2px solid (visible)",
          "motion_sensitivity": "Respect prefers-reduced-motion",
          "contrast_ratio": "7:1 per wcag_2_2_aaa",
          "theme_stability": "Avoid automatic switching for letters"
        },
        "print_system": {
          "page_setup": "@page { size: A5; margin: 0.75cm; }",
          "font_sizes": "12pt body, 24pt h1, 18pt h2, 14pt h3",
          "color_scheme": "Black text, white background",
          "element_breaks": "page-break-inside: avoid"
        }
      },
      "cognitive_load_management": {
        "content_density": {
          "large_lists": "CSS Grid for >20 items",
          "column_layout": "minmax(150px, 1fr)",
          "spacing": "0.5rem gap, 1.618rem margin"
        },
        "localization": {
          "nordic_characters": "UTF-8 font support for æ, ø, å",
          "norwegian_text": "hyphens: auto for readability",
          "testing": "Verify character display in print/screen"
        },
        "error_handling": {
          "font_fallbacks": "Georgia, Times New Roman",
          "unit_fallbacks": "rem/px for calc() failures",
          "browser_degradation": "IE11 compatibility testing"
        }
      }
    },
    "principles": ["clarity_over_cleverness", "accessibility_first", "mathematical_foundation"],
    "typography": {
      "cognitive_header": "§ Typography System Foundation",
      "scale": "golden_ratio_1618",
      "base_size": "16px",
      "font_stacks": {
        "primary": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",
        "monospace": "'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', monospace"
      },
      "accessibility": {
        "contrast_ratio": "7:1", 
        "font_size_min": "16px"
      }
    },
    "color_system": {
      "cognitive_header": "§ Color System Methodology",
      "methodology": "semantic_hsl",
      "accessibility": "wcag_2_2_aaa",
      "modes": ["light", "dark", "high_contrast"]
    },
    "spatial_system": {
      "cognitive_header": "§ Spatial Design Foundation",
      "base_unit": "0.5rem",
      "grid": "8pt_baseline",
      "golden_ratio": "1.618_proportions"
    },
    "motion": {
      "cognitive_header": "§ Motion Design System",
      "duration": {
        "fast": "150ms", 
        "normal": "300ms", 
        "slow": "500ms"
      },
      "easing": "cubic-bezier(0.25, 0.1, 0.25, 1)",
      "accessibility": "respect_prefers_reduced_motion",
      "performance": "60fps_minimum"
    }
  },

  "business_strategy": {
    "framework": "design_thinking_lean_startup_agile",
    "tools": {
      "lean_canvas": "monthly_updates",
      "okr": "quarterly_cycles",
      "design_thinking": "continuous_iteration"
    },
    "localization": {
      "nordic": ["norwegian", "swedish", "danish", "icelandic"],
      "communication": "direct_transparent",
      "currency": "nok_sek_dkk_isk"
    }
  },

  "specialized_capabilities": {
    "visualization": {
      "3d": ["babylon_js", "three_js"],
      "charts": ["d3_js", "interactive_svg"],
      "animation": ["gpu_accelerated", "mathematical_precision"]
    },
    "async_processing": {
      "patterns": ["concurrent_ruby", "async_gem", "actor_model"],
      "security": ["rate_limiting", "resource_limits", "timeout_protection"],
      "monitoring": ["performance_metrics", "error_tracking"]
    },
    "browser_automation": {
      "frameworks": ["ferrum", "selenium", "playwright"],
      "security": ["unveil_restrictions", "pledge_limits", "sandboxing"],
      "performance": ["headless_optimization", "concurrent_sessions"]
    },
    "scraping": {
      "libraries": ["nokogiri", "mechanize", "httparty"],
      "patterns": ["rate_limiting", "retry_mechanisms", "error_recovery"],
      "ethics": ["robots_txt_compliance", "respectful_crawling"]
    }
  },

  "security": {
    "baseline": ["input_validation", "output_encoding", "secure_defaults", "zero_trust"],
    "by_stack": {
      "rails": ["secure_headers", "brakeman", "pundit"],
      "frontend": ["csp_headers", "sri_integrity", "https_only"],
      "shell": ["input_sanitization", "privilege_dropping"],
      "openbsd": ["pledge", "unveil", "doas"],
      "browser": ["sandbox_isolation", "resource_limits"],
      "async": ["rate_limiting", "circuit_breakers"]
    }
  },

  "deployment": {
    "environments": ["development", "staging", "production"],
    "requirements": {
      "docs": ["readme", "setup", "api_docs"],
      "scripts": ["install", "test", "deploy"],
      "configs": ["environment_examples", "monitoring"]
    },
    "monitoring": {
      "health": ["service_status", "resource_usage"],
      "logging": ["error_tracking", "performance_metrics"],
      "alerts": ["service_down", "high_error_rate"]
    }
  },

  "changelog": [
    {
      "version": "v15.0.0-unified",
      "date": "2025-07-15T20:33:13Z",
      "author": "anon987654321",
      "changes": [
        "Added comprehensive documentation framework with inline comments and code examples",
        "Restored strict validation pipeline with rollback mechanisms and schema validation",
        "Enhanced testing framework with comprehensive quality gates and AI-powered enhancement",
        "Expanded self-optimization logic with meta-analysis and enhanced recursive improvement",
        "Integrated forbidden removals protection for critical systems",
        "Added changelog tracking and version management",
        "Maintained all existing cognitive framework and circuit breaker functionality",
        "Preserved all design system and specialized capabilities from v12.9.0"
      ]
    }
  ]
}