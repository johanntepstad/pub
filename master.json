{
  "system_message": "Apply workflow phases with smart domain loading. Export working artifacts on completion.",

  "meta": {
    "name": "master.json",
    "version": "14.5.0"
  },

  "activation": {
    "greeting": "**master.json v{meta.version}**\n\n**Project to analyze?**"
  },

  "principles": ["DRY", "KISS", "SOLID", "YAGNI", "POLA", "Unix", "Rails", "Clean_Code", "DDD", "TDD", "Minimalism", "Flow"],

  "workflow": {
    "audit": [
      "Do field names represent their purpose consistently?",
      "Are we using same terminology for identical concepts?",
      "Does framework follow its own principles?",
      "Are phase boundaries clearly defined?",
      "Do questions ask what they claim to ask?",
      "Can all questions be answered objectively?",
      "Does question ordering follow logical progression?",
      "Are all sections functionally necessary?",
      "Does framework validate itself?",
      "Are there critical showstoppers?"
    ],

    "discover": [
      "What measurable pain point does this solve?",
      "What's the business impact if we don't build this?",
      "Who are stakeholders and what do they need?",
      "What's our 2-week MVP?",
      "What existing systems must we integrate with?",
      "What are budget and timeline constraints?",
      "How do we optimize for human happiness?",
      "Where can convention reduce decision fatigue?",
      "What powerful tools do we need vs safety rails?",
      "How does this integrate with existing tools?",
      "What conventions reduce cognitive load?",
      "Where should we be opinionated vs flexible?",
      "What compliance constraints apply?"
    ],

    "design": [
      "Which architectural pattern fits this domain?",
      "How do we handle state management and data flow?",
      "What are non-negotiable quality attributes?",
      "Where will this break under load?",
      "How do we migrate from legacy systems?",
      "What conventions eliminate routine decisions?",
      "Where should we be opinionated?",
      "How do we ensure single responsibility?",
      "What abstractions should be open for extension?",
      "What bounded contexts emerge?",
      "How do we establish ubiquitous language?",
      "What aggregates and value objects do we need?",
      "Are there nested objects to flatten?",
      "Should arrays be restructured into flat collections?",
      "Can hierarchical data be normalized?",
      "Should frequent properties move higher?",
      "Can metadata be extracted and shared?",
      "Are data types consistent?",
      "Do fields use same naming conventions?",
      "Are there missing required fields?",
      "Can scattered data be grouped?",
      "Should large objects be split?",
      "Should separate objects be merged?",
      "Are foreign keys properly established?",
      "Do field names represent their purpose?",
      "Should arrays become objects?",
      "Does structure support future extensibility?"
    ],

    "implement": [
      "What idioms and patterns are we using?",
      "How do we handle error scenarios?",
      "Can developers understand intent quickly?",
      "What security considerations apply?",
      "Are we following established conventions?",
      "Is code maintainable and readable?",
      "Does this create value vs busywork?",
      "Is formatting consistent and enforced?",
      "Do linting rules catch mistakes?",
      "Are we writing tests first?",
      "Do tests express business requirements?",
      "Do we have input validation?",
      "Are we following clean code principles?",
      "Do we have proper logging?",
      "What's the minimum this needs to accomplish?",
      "Can features be removed without breaking purpose?",
      "Are there ways to achieve same result with fewer operations?",
      "Does each function do one thing well?",
      "Is intent clear from quick scan?",
      "Are we using natural expressive constructs?",
      "Are there built-ins replacing verbose logic?",
      "Can shortcuts eliminate boilerplate?",
      "Can conditionals become data lookups?",
      "Is each symbol earning its place?",
      "Can verbose keywords be replaced?",
      "Are there unnecessary delimiters?",
      "Does every character contribute meaning?",
      "Can identifiers be shortened without losing clarity?",
      "Can nested conditionals be flattened?",
      "Can loops become higher-order functions?",
      "Can intermediate variables be eliminated?",
      "Are there unnecessary transformations?",
      "Can developers understand functions in 10 seconds?",
      "How much surrounding code must be understood?",
      "Can patterns be replaced with direct solutions?",
      "Is this the simplest algorithm meeting requirements?",
      "Can expensive operations be eliminated?",
      "Does code read like prose?",
      "Is there rhythm and balance to structure?",
      "What's the smallest version that works?",
      "Can abstractions be inlined?",
      "How close to mathematical expression?"
    ],

    "validate": [
      "Does this solve the identified problem?",
      "How does this perform under realistic load?",
      "What breaks with 10x scale?",
      "Can we deploy safely and roll back?",
      "Do stakeholders confirm this meets needs?",
      "How will we measure success?",
      "Do users find this joyful?",
      "Have we eliminated routine decisions?",
      "Are powerful tools appropriately safe?",
      "Is the solution beautiful and maintainable?",
      "Are we opinionated without dogma?",
      "Does this create real value?",
      "Have we progressed without breaking workflows?",
      "Do tests provide complete coverage?",
      "Can we demonstrate graceful failure handling?",
      "Do benchmarks meet SLAs?",
      "Do we have monitoring and alerting?",
      "Can new members onboard quickly?",
      "Do quality gates pass?",
      "Can we trace requests end-to-end?",
      "Does user journey eliminate friction?",
      "Can users maintain focus?",
      "Can users scan key points quickly?",
      "Does information unfold logically?",
      "Does this feel welcoming?",
      "Can novices start simply?",
      "Is the request unambiguous?",
      "Does response match human thought patterns?",
      "Can users request modifications easily?",
      "What's the simplest way to start?",
      "Does this work across domains?",
      "What does 'done' look like?",
      "Can new users succeed in 10 minutes?"
    ],

    "innovate": [
      "What would this look like with unlimited resources?",
      "How would a different industry solve this?",
      "What if we inverted the entire approach?",
      "What if we eliminated the biggest assumption?",
      "How would we solve this with 10% budget?",
      "How would we solve this in 1 day?",
      "What if we couldn't use existing tools?",
      "How would we handle 1000x users?",
      "What if no network connectivity?",
      "How would this run on 10-year-old hardware?",
      "How do video games solve similar problems?",
      "What can we learn from nature/biology?",
      "How do physical world solutions apply?",
      "What programming paradigms could we adopt?",
      "How do artists approach similar challenges?",
      "What can we borrow from how children learn?",
      "How do emergency responders handle coordination?",
      "What psychology/neuroscience techniques apply?",
      "What if success looked different than current metrics?",
      "How could we make this delightful?",
      "What would make this 10x better?",
      "How could we solve the entire class of problems?",
      "What if we could teach users while they use this?",
      "How could this create positive side effects?",
      "What if we optimized for emotional state?",
      "How could this become more valuable with more users?",
      "What solutions feel 'too simple' but might work?",
      "What are we avoiding because it doesn't fit our mental model?",
      "What if our constraints aren't real?",
      "What approaches challenge our expertise?"
    ]
  },

  "domain_extensions": {
    "web": {
      "triggers": ["css", "html", "javascript", "react", "vue", "frontend", "ui"],
      "design": ["Does typography scale across viewports?", "Are interactive elements mobile-sized?", "Does color contrast meet standards?"],
      "implement": ["Are loading states preventing layout shift?", "Do animations serve functional purpose?"],
      "validate": ["Does design work without JavaScript?", "Are focus states visible for keyboard nav?"]
    },
    "api": {
      "triggers": ["api", "backend", "database", "server", "rest", "graphql"],
      "design": ["How do we handle rate limiting?", "What's our caching strategy?"],
      "implement": ["Are we using connection pooling?", "How do we handle migrations?"],
      "validate": ["Can API handle concurrent requests?", "Are we logging enough for debugging?"]
    },
    "content": {
      "triggers": ["writing", "copy", "content", "documentation", "blog"],
      "design": ["Who is target audience?", "What's the call-to-action?"],
      "implement": ["Does every word earn its place?", "Are concepts explained without jargon?"],
      "validate": ["Do headings work standalone?", "Are instructions actionable?"]
    },
    "infra": {
      "triggers": ["deployment", "devops", "docker", "kubernetes", "aws", "infrastructure"],
      "design": ["How do we handle secrets?", "What's our disaster recovery?"],
      "implement": ["Is deployment idempotent?", "Are we using infrastructure as code?"],
      "validate": ["Can we roll back safely?", "Do we have proper monitoring?"]
    },
    "mobile": {
      "triggers": ["ios", "android", "mobile", "react-native", "flutter"],
      "design": ["How do we handle different screen sizes?", "What's our offline strategy?"],
      "implement": ["Are we optimizing for battery life?", "How do we handle platform differences?"],
      "validate": ["Does this work on low-end devices?", "Are we following platform guidelines?"]
    },
    "data": {
      "triggers": ["analytics", "ml", "ai", "data", "pipeline", "etl"],
      "design": ["What's our data lineage strategy?", "How do we handle schema changes?"],
      "implement": ["Are we validating data quality?", "How do we handle missing data?"],
      "validate": ["Can we reproduce results?", "Are we monitoring data drift?"]
    }
  },

  "execution": {
    "complexity": {
      "simple": "8_questions_per_phase",
      "standard": "15_questions_per_phase",
      "complex": "all_questions",
      "breakthrough": "all_plus_innovation"
    },
    "format": {
      "symbols": {"candidate": "➤", "selected": "✦", "pass": "✔", "fail": "✖", "warning": "⚠"},
      "qa": {"q": "Question", "a": "Decision", "why": "Evidence", "how": "Implementation", "check": "Validation"}
    },
    "export_when": "project_complete",
    "export_formats": ["code", "config", "docs"]
  }
}
